class PostsController < ApplicationController
  def index
# 11- we declare an instance variable @posts and assign it a collection of Post
# objects using the all method, provided by ActiveRecord. all returns a collection of
# Post objects.
    @posts = Post.all
  end

  def show
# we find the post that corresponds to the id in the params that was passed to show
# and assign it to @post. Unlike in the index method, in the show method, we populate
# an instance variable with a single post, rather than a collection of posts.
    @post = Post.find(params[:id])
  end

  def new
# we create an instance variable, @post, then assign it an empty post returned by Post.new
    @post = Post.new
  end

  def create
# we call Post.new to create a new instance of Post
    @post = Post.new
    @post.title = params[:post][:title]
    @post.body = params[:post][:body]
# if saving the post was successufl, we display success message using flash[:notice]
# and redirect the user tot he route generated by @post. Redirecting to @post will
# direct the user to the posts show view.
    if @post.save
# we assign a value to flash[:notice]. the flash hash provides a way to pass temporary
# values between actions. Any value placed in flash will be available in next action
# and then deleted.
      flash[:notice] = "Post was saved."
      redirect_to @post
    else
# if saving the instance of post was not successful, we display an eror message
# and render the new view again.
      flash[:error] = "There was an error saving the post. Please try again."
      render :new
    end
  end
# Unlike new, create does not have a corresponding view as it works behind the scenes
# to collect the data submitted by the user and update the database. create is a POST action.

  def edit
  end
end
